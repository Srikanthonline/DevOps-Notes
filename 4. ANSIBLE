DEOPLYMENT AUTOMATED.

SERVER
SOFTWARE INSTALLATION
TOMCAT SETUP
DEOPLYMENT

ANSIBLE:
its a free and open-source tool.
its an it engine that automates from server creation to deployment.
It is also called a configuration management tool.

configuration: cpu, memory and os
management: update, delete, install ----

ansible invented by Maichel dehaan in 2012.
ansible is taken by RedHat
We have both free and paid versions of ansible.
it is platform independent.
ansible works with YAML language.
ansible dependency is Python.
GUI for ansible is Ansible-Tower.

HOW IT WORKS ?
ARCHITECTURE:

ANSIBLE SERVER: used to communicate with worker nodes and install pkgs, deployment
WORKER NODES: takes commands from ansible server and works according to it
PLAYBOOK: conatins the code which is used to perform action.
INVENTORY: conatains info about worker nodes and group.



SETUP:
CREATE 5 SERVERS (1=ANSIBLE, 2=DEV, 2=TEST)
ALL SERVERS:
sudo -i
hostnamectl set-hostname ansible/dev-1/dev-2/test-1/test-2
sudo -i


passwd root
vim /etc/ssh/sshd_config  (38 uncomment, 63 no=yes)
systemctl restart sshd
systemctl status sshd


ANSIBLE SERVER:
amazon-linux-extras install ansible2 -y
yum install python python-pip python-dlevel -y
vim /etc/ansible/hosts (12)

[dev]
172.31.44.19
172.31.35.18
[test]
172.31.36.39
172.31.43.36

ssh-keygen #used to generate the keys 
enter 4 times
ssh-copy-id root@private-ip  -- > yes -- > password
ssh private-ip
ctrl d

NOTE: COPY THE KEYS TO ALL WORKER NODES BY USING ABOVE METHOD

=====================================================================

1. ADHOC COMMANDS:
these are simple linux comands.
used for temp works.
these commands will be over rided.

ansible all -a "yum install git -y"
ansible all -a "yum install maven -y"
ansible all -a "mvn --version"
ansible all -a "touch file1"
ansible all -a "ls"
ansible all -a "yum install httpd -y"
ansible all -a "systemctl restart httpd"
ansible all -a "systemctl status httpd"
ansible all -a "useradd raham"

INVENTORY HOST PATTREN:
ansible all --list-hosts
ansible dev --list-hosts
ansible test --list-hosts
ansible test[0] --list-hosts
ansible all[-1] --list-hosts
ansible all[1:3] --list-hosts

HISTORY:
 1  2023-09-14 06:22:06 ansible all -a "yum install git -y"
    2  2023-09-14 06:24:25 ansible dev -a "yum install maven -y"
    3  2023-09-14 06:25:19 ansible test -a "yum install maven -y"
    4  2023-09-14 06:26:20 ansible all -a "touch file1"
    5  2023-09-14 06:26:42 ansible all -a "ls"
    6  2023-09-14 06:27:03 ansible all -a "yum install httpd -y"
    7  2023-09-14 06:27:33 ansible all -a "systemctl start httpd"
    8  2023-09-14 06:27:50 ansible all -a "systemctl status httpd"
    9  2023-09-14 06:29:29 ansible all -a "useradd raham"
   10  2023-09-14 06:30:03 ansible all -a "cat /etc/passwd"
   11  2023-09-14 06:30:53 ansible all --list-hosts
   12  2023-09-14 06:31:01 ansible dev --list-hosts
   13  2023-09-14 06:31:08 ansible test --list-hosts
   14  2023-09-14 06:31:14 ansible test[0] --list-hosts
   15  2023-09-14 06:31:37 ansible all[-1] --list-hosts
   16  2023-09-14 06:31:43 ansible all[-2] --list-hosts
   17  2023-09-14 06:32:31 ansible all --list-hosts
   18  2023-09-14 06:33:00 ansible all[1:3] --list-hosts
   19  2023-09-14 06:36:48 export HISTTIMEFORMAT="%F %T "
   20  2023-09-14 06:37:05 history

=============================================================================================


ANSIBLE MODULES:
modules work on key-value pair.
modules used to do the work which we want.
depend on the work module changes.

NAME: RAHAM
COURSE: DEVOPS
FEE: 8k

color pattren:

YELLOW	: SUCCESSFUL
RED	: FAILED
GREEN	: ALREADY DONE
BLUE	: SKIPPED

ansible all -a "yum install git -y"
ansible all -m yum -a "name=git state=present"
ansible all -m yum -a "name=docker state=present"  (present=install)
ansible all -m yum -a "name=docker state=present"  (absent=uninstall)
ansible all -m yum -a "name=docker state=latest"   (latest=update)
ansible all -m service -a "name=httpd state=started"
ansible all -m service -a "name=httpd state=stopped"
ansible all -m user -a "name=rajinikanth state=present"
ansible all -m user -a "name=rajinikanth state=absent"
ansible all -m copy -a "src=app.yml dest=/root"
ansible all -a "ls /root"

PLAYBOOKS:
playbook is a collection of modules.
we can execute multiple modules at same time.
we can reuse the playbook.
playbook will be written on YAML language.
YAML: YET ANOTHER MARKUP LANGUAGE
its a human readable and serial langauge.
yaml is syntax-based.
yaml start with --- and end with ...
we write it on list format.
extension is .yml or .yaml

PLAYBOOK1:

vim raham.yml


---
- hosts: all
  tasks:
    - name: install httpd
      yum: name=httpd state=present

    - name: start httpd
      service: name=httpd state=started

    - name: create user
      user: name=revi state=present
...


ansible-playbook raham.yml


- hosts: all
  tasks:
    - name: remove httpd
      yum: name=httpd state=absent

    - name: stop httpd
      service: name=httpd state=stopped

    - name: remove user
      user: name=revi state=absent


TAGS:
used to execute or skip a specific task

- hosts: all
  tasks:
    - name: install docker
      yum: name=docker state=present
      tags: a

    - name: start docker
      service: name=docker state=started
      tags: b

    - name: install maven
      yum: name=maven state=present
      tags: c

    - name: create user
      user: name=revi state=present
      tags: d

SINGLE TAG: ansible-playbook raham.yml --tags c
MULTI TAGS: ansible-playbook raham.yml --tags a,b
SKIP TAGS: ansible-playbook raham.yml --skip-tags "c"
MULTI SKIP TAGS: SKIP TAGS: ansible-playbook raham.yml --skip-tags "b,c"



HISTORY:
 43  ansible all -a "yum install git -y"
   44  ansible all -a "yum install tree -y"
   45  ansible all -a "yum remove git* tree* -y"
   46  ansible all -m yum -a "name=git state=present"
   47  ansible all -m yum -a "name=docker state=present"
   48  ansible all -m yum -a "name=httpd state=present"
   49  ansible all -m yum -a "name=httpd state=absent"
   50  ansible all -m yum -a "name=httpd state=present"
   51  ansible all -m yum -a "name=httpd state=latest"
   52  ansible all -m yum -a "name=httpd state=started"
   53  ansible all -m service -a "name=httpd state=started"
   54  ansible all -a "systemctl status httpd"
   55  ansible all -m service -a "name=httpd state=stopped"
   56  ansible all -a "systemctl status httpd"
   57  ansible all -m user -a "name=rajinikanth state=present"
   58  ansible all -m user -a "name=rajinikanth state=absent"
   59  vim app.yml
   60  ll
   61  ansible all -m copy -a "src=app.yml dest=/tmp"
   62  ansible all -a "ls"
   63  ansible all -a "ls /tmp"
   64  ansible all -m copy -a "src=app.yml dest=/root"
   65  ansible all -a "ls /tmp"
   66  ansible all -a "ls /root"
   67  rm -rf *
   68  vim raham.yml
   69  ansible all -a "yum remove httpd* -y"
   70  ansible-playbook raham.yml
   71  vim raham.yml
   72  ansible-playbook raham.yml
   73  vim raham.yml
   74  cat raham.yml
   75  ansible-playbook raham.yml --tags c
   76  ansible all -a "yum remove maven* -y"
   77  ansible-playbook raham.yml --tags c
   78  cat raham.yml
   79  ansible-playbook raham.yml --tags a,b
   80  cat raham.yml
   81  ansible all -a "yum remove docker* maven* -y"
   82  cat raham.yml
   83  ansible-playbook raham.yml --skip-tags "c"
   84  ansible-playbook raham.yml --skip-tags "c,d"
   85  history
